#!/usr/bin/env ydsh

if $# != 1 {
    echo "[usage] $0 [output]" 1>&2
    exit 1
}

# let out = "../${$@[0]}"
let out = $1.startsWith("/") ? $1 : "../$1"
let work_dir = "unicode-temp"

write() {
    echo $@ >> $out
}

function table($n : String, $v : typeof([""])) {
    write "#ifdef USE_${$n.upper()}"
    write
    write -n "static const UNICODE_INTERVAL $n[] = {"
    var i = 0
    for $e in $v {
        if($i % 4 == 0) { write -n -e "\n   "; }
        write -n " $e"
        $i++
    }
    write
    write "};"
    write
    write "#endif"
    write
}


test -d $work_dir || mkdir $work_dir

cd $work_dir

test -f UnicodeData.txt ||
    curl http://www.unicode.org/Public/UCD/latest/ucd/UnicodeData.txt -o ./UnicodeData.txt

test -f EastAsianWidth.txt ||
    curl http://www.unicode.org/Public/UCD/latest/ucd/EastAsianWidth.txt -o ./EastAsianWidth.txt

test -d uniset ||
    git clone https://github.com/depp/uniset.git || throw new Error("")

cd uniset
git checkout 4b186196dd
(autoreconf -i && ./configure && make) || throw new Error("")
cd ../

## generate code
echo generate file: $out

export-env UNICODE_DIR = "."

echo "/* Auto-generated by tools/scripts/$(basename $0)  */" > $out
write "/*"
cat EastAsianWidth.txt | head -n 2 >> $out
write "*/"
write ""

$IFS = $'\n'
$table("zero_width_table", $(./uniset/uniset --32 cat:Me,Mn,Cf + U+1160..U+11FF - U+00AD))
$table("two_width_table", $(./uniset/uniset --32 eaw:F,W - cat:Me,Mn,Cf))
$table("ambiguous_width_table", $(./uniset/uniset --32 eaw:A - cat:Me,Mn,Cf))

echo code generation success
