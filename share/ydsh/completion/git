
# git completion for ydsh

source $SCRIPT_DIR/../module/completion
source $SCRIPT_DIR/../module/path

var git_bash_comp_path = ""

function _lookup() : String {
    if($OSTYPE == "Darwin") {
        return '/Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash'
    }
    var list = [
        '/etc/bash_completion.d/git.sh', # suse
        '/etc/bash_completion.d/git', # fedora, old debian
        '/usr/share/bash-completion/completions/git', # arch, ubuntu, new debian
        '/usr/share/bash-completion/git', # gentoo
    ]
    for $i in $list {
        test -f $i && return $i
    }
    return "."
}

function _git($words : [String], $cursor : Int) : [String] {
    if !(test -f "$git_bash_comp_path") {
        $git_bash_comp_path = $_lookup()
    }
    test -f "$git_bash_comp_path" || return new [String]()
    let _helper = "$SCRIPT_DIR/../git-completion.ydsh.bash"
    var cmd = $words[0]

    $cmd != "git" && $cmd != "gitk" && return new [String]()

    var line = ""
    for $w in $words {
        if !$line.empty() { $line += " "; }
        $line += $w
    }
    if $cursor == $words.size() {
        $line += " "
    }
    var ret = $(bash $_helper $git_bash_comp_path $cmd $line)
    if $ret.size() == 1 && test -d "${$ret[0]}" && $ret[0][$ret[0].size() - 1] != '/' {
        $ret[0] += "/"
    }
    return $ret
}

var gg = $_git

$compAdd("git", $_git)
$compAdd("gitk", $_git)
