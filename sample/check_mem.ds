#!/usr/bin/env arsh

# check argument
if $# != 2 {
    echo usage: $0 "[target binary] [test case dir]" 1>&2
    exit 1
}

let bin = $1
let dir = $2

test -x $bin || {
    echo not found executable file: $bin 1>&2
    exit 1
}

# check valgrind
which valgrind || {
    echo need valgrind 1>&2
    exit 1
}


function color($c : Int, $s : String): String {
    return (test -t 1) ? "$(echo -e -n '\e['$c'm'$s'\e[0m')" : $s
}

let OK = $color(32, '[OK]')
let NG = $color(35, '[NG]')

function test($a : String) : Boolean {
    if !(test -f $a) {
        echo not found file: $a 1>&2
        exit 1
    }
    return !(valgrind -v --leak-check=full $bin $a 2>&1 > /dev/null | __gets | grep "blocks are definitely lost" > /dev/null)
}

function __test_each($data : Array<String>, $test : typeof($test)): Boolean {
    var c = 0
    let size = $data.size()
    for $t in $data {
        if $test($t) {
            $c++
            echo $OK $t
        } else {
            echo $NG $t
        }
    }
    echo ++++ result [$c/$size] ++++
    return $c == $size
}

if $__test_each($(find $dir -name "*.ds" | sort), $test) {
    exit 0
} else {
    exit 1
}

