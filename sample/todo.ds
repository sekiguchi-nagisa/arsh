#!/usr/bin/env arsh

let today = "$(date +'%Y%m%d').md"

function create_today() : String {
    let name = $today
    if !(test -e $name) {
        echo "# $(date +'%Y-%m-%d')" > $name
        echo "## TODO" >> $name
        echo -e "\n" >> $name
        echo "## MEMO" >> $name
    }
    assert test -f $name
    return $name
}

function find_todo_at($a : Int) : String? {
    var c = $a + 1
    var v = $(ls | grep '20[0-9][0-9][0-1][0-9][0-3][0-9].md' | sort -r | head -n $c)
    var i = $a
    if $i < $v.size() {
        var name = $v[$i]
        assert test -f $name
        return $name
    }
    return new String?()
}

function find_todo($a : String) : String? {
    var path = $create_today()

    $a =~ $/^today$/i && { return $path; }

    var r = $/^\-([1-9][0-9]*)$/.match($a)
    $r.size() > 0 && { return $find_todo_at($r[1]!.toInt()!) }

    if $a =~ $/^[1-9][0-9]?/ { 
        var b = $a.toInt()!
        var v = $(ls | grep "$(date +'%Y%m')${$b < 10 ? '0' + $b : $b as String}")
        return $v.size() == 1 ? $v[0] : new String?()
    }
    return (test -f $a) ? $a : new String?()
}


# not return 
function open_todo_today() : Boolean {
    return exec vim ${$create_today()}
}

if $# == 0 {
    $open_todo_today()
}
if $# == 1 && $1 !~ $/^show$/i {
    if let f = $find_todo($1)
    {
        exec vim $f
    }
    echo file not found: $1 1>&2
    exit 1
}

if $# == 1 && $1 =~ $/^show$/i {
    echo ${$find_todo('today')!}
    exit 0
}

if $1 =~ $/^show$/i {
    if let f = $find_todo($2)
    { echo $f; exit 0; }
    echo file not found: $2 1>&2
    exit 1
}

echo file not found: $1 1>&2
exit 1
