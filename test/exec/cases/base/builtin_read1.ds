# test abnormal condition

# invalid file descriptor
read -u 89899
assert $? == 1
assert "$(read -u 89899 2>&1)" == "${$SCRIPT_NAME.basename()}:6: read: 89899: Bad file descriptor"

read -u 68719476735
assert $? == 1
assert "$(read -u 68719476735 2>&1)" == 
    "${$SCRIPT_NAME.basename()}:10: read: 68719476735: invalid file descriptor"

# invalid timeout specification
read -t -1
assert $? == 1
assert "$(read -t -1 2>&1)" == "${$SCRIPT_NAME.basename()}:16: read: -1: invalid timeout specification"

read -t 9999999999999999
assert $? == 1
assert "$(read -t 9999999999999999 2>&1)" == 
    "${$SCRIPT_NAME.basename()}:20: read: 9999999999999999: invalid timeout specification"

# invalid option
read -q
assert $? == 2
assert "$(read -q 2>&1)" ==
"\
${$SCRIPT_NAME.basename()}:26: read: -q: invalid option
read: read [-rs] [-d delim] [-f ifs] [-n nbytes] [-N nbytes] [-p prompt] [-t timeout] [-u fd] [name ...]\
"

read -p
assert $? == 2
assert "$(read -p 2>&1)" == "${$SCRIPT_NAME.basename()}:34: read: -p: option require argument"

read -:
assert $? == 2
assert "$(read -q 2>&1)" ==
"\
${$SCRIPT_NAME.basename()}:38: read: -q: invalid option
read: read [-rs] [-d delim] [-f ifs] [-n nbytes] [-N nbytes] [-p prompt] [-t timeout] [-u fd] [name ...]\
"

# invalid NBytes (-n, -N)
assert "$(read -n farea 2>&1)" == "\
${$SCRIPT_NAME.basename()}:45: read: farea: must be positive int32"
assert $? == 1

assert "$(read -n -12 2>&1)" == "\
${$SCRIPT_NAME.basename()}:49: read: -12: must be positive int32"
assert $? == 1

assert "$(read -n 2147483648 2>&1)" == "\
${$SCRIPT_NAME.basename()}:53: read: 2147483648: must be positive int32"
assert $? == 1

assert "$(read -N farea 2>&1)" == "\
${$SCRIPT_NAME.basename()}:57: read: farea: must be positive int32"
assert $? == 1

assert "$(read -N -12 2>&1)" == "\
${$SCRIPT_NAME.basename()}:61: read: -12: must be positive int32"
assert $? == 1

assert "$(read -N 2147483648 2>&1)" == "\
${$SCRIPT_NAME.basename()}:65: read: 2147483648: must be positive int32"
assert $? == 1

# help
assert help read | grep '^read: read \[-rs] \[-d delim] \[-f ifs] \[-n nbytes] \[-N nbytes] \[-p prompt] \[-t timeout] \[-u fd] \[name ...]'
assert $PIPESTATUS[0] == 0 && $PIPESTATUS[1] == 0

assert read -h| grep '^read: read \[-rs] \[-d delim] \[-f ifs] \[-n nbytes] \[-N nbytes] \[-p prompt] \[-t timeout] \[-u fd] \[name ...]'
assert $PIPESTATUS[0] == 2 && $PIPESTATUS[1] == 0

assert read --help| grep '^read: read \[-rs] \[-d delim] \[-f ifs] \[-n nbytes] \[-N nbytes] \[-p prompt] \[-t timeout] \[-u fd] \[name ...]'
assert $PIPESTATUS[0] == 2 && $PIPESTATUS[1] == 0

true
