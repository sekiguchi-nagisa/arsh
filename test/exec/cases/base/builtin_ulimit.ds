#$test($ignored = 'cygwin')

# invalid option
assert "$(ulimit -f hgoe 2>&1)" == "ydsh: ulimit: hgoe: invalid number"
ulimit -f hgoe
assert $? == 1

var expect =
"ydsh: ulimit: -X: invalid option
$(help -s ulimit)"

assert "$(ulimit -X 2>&1)" == $expect
assert !ulimit -X
assert $? == 2


# print resources
var opts = new [String]()
for $opt in "cdefilmnqrRstuvx" {
    ulimit -$opt && { $opts.add("-$opt"); true; }
}
assert "$(ulimit)" == "$(ulimit -f)"
assert "$(ulimit -S)" == "$(ulimit -f -S)"
assert "$(ulimit -H)" == "$(ulimit -f -H)"

# print all resources
assert "$(ulimit -a)" == "$(ulimit $opts)"
assert "$(ulimit -a -H)" == "$(ulimit $opts -H)"
assert "$(ulimit -a -S)" == "$(ulimit $opts -S)"

# change resource limit
assert "$(ulimit -S -f -f 5000)" == '5000'
assert "$(ulimit -S -f -f unLimiTed)" == "unlimited"
assert "$(ulimit -S -f HarD -f)" == "$(ulimit -f -H)"
assert "$(ulimit -S -f sOft -f)" == "$(ulimit -f -S)"
assert "$(ulimit -S -f $'HarD\x00' -f 2>&1)" == "ydsh: ulimit: HarD: invalid number"
assert {ulimit -S -f $'HarD\x00' -f; $?} == 1
assert "$(ulimit $'HarD\x00' 2>&1)" == "ydsh: ulimit: HarD: invalid number"
assert {ulimit $'HarD\x00'; $?} == 1

assert ulimit -S -f 5000
assert ulimit -H 6000
assert "$(ulimit -H)" == "6000"
assert !ulimit -S 7000
assert $? == 1
assert "$(ulimit -S 7000 2>&1)" ==
       "ydsh: ulimit: file size (blocks): cannot change limit: Invalid argument"

true
