
# trap subshell (not inherit parent trap)

function run(s : Bool, sig : Signal) {
    if $s {
        [$SIGINT, $SIGHUP, $SIGTERM].trap($SIG_EXIT)
    }
    for(var i = 0;; $i++) {
        if $i == 10000 {
            $i = 0
            $sig.kill($PID)
        }
    }
}

[$SIGINT, $SIGHUP, $SIGTERM].trap($SIG_EXIT)

assert ("$($run($false, $SIGINT) with 2>&1)" with 2>&1).empty()
assert $? == 128 + $SIGINT.value()
true

assert "$($run($true, $SIGINT) with 2>&1)" =~ 
    new Regex("gracefully shutdown process \([0-9]+\) by \`" + $SIGINT.message() + "'")
assert $? == 128 + $SIGINT.value()
true

assert "$($run($true, $SIGHUP) with 2>&1)" =~ 
    new Regex("gracefully shutdown process \([0-9]+\) by \`" + $SIGHUP.message() + "'")
assert $? == 128 + $SIGHUP.value()
true

assert "$($run($true, $SIGTERM) with 2>&1)" =~ 
    new Regex("gracefully shutdown process \([0-9]+\) by \`" + $SIGTERM.message() + "'")
assert $? == 128 + $SIGTERM.value()
true

assert "$($run($true, $SIGQUIT) with 2>&1)".empty()
assert $? == 128 + $SIGQUIT.value()
true