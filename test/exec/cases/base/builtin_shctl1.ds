# empty
assert shctl
assert "$(shctl 2>&1)" == ""

# undefined subcommand
shctl hogera
assert $? == 2
assert "$(shctl hoge 2>&1)" == "${$SCRIPT_NAME.basename()}:8: shctl: undefined subcommand: hoge"

# source
shctl is-sourced
assert $? == 1
command shctl is-sourced
assert $? == 1
call shctl is-sourced
assert $? == 1

source ../../_module4test/sourced.ds as S
assert $S.SOURCED == 0
assert $S.sourced() == 0

function f() : Int {
    $? = 0
    shctl is-sourced
    return $?
}
assert $f() == 1

# function
function gg() : String {
    return "$(shctl function)"
}

cc() {
    shctl function
}
assert $gg() == "gg"
assert cc
assert $? == 0
assert "$(cc)" == "cc"
assert "$(shctl function)" == "<toplevel>"
shctl function
assert $? == 1

if (test -e /dev/full) {
    assert "$(shctl function 2>&1 > /dev/full)" =~ $/shctl: io error: .+/
    assert $? == 1
}

# interactive
$? = 0
shctl is-interactive
assert $? == 1
assert shctl backtrace

if (test -e /dev/full) {
    assert "$(shctl backtrace 2>&1 > /dev/full)" =~ $/shctl: io error: .+/
    assert $? == 1
}

# info
assert $reply.empty()
assert shctl info | grep %regex | grep PCRE2
assert shctl info | grep VERSION | grep $VERSION
assert shctl info | grep %compiler
assert shctl info | grep MACHTYPE | grep $MACHTYPE
assert shctl info | grep OSTYPE | grep $OSTYPE
assert shctl info | grep CONFIG_HOME | grep $CONFIG_HOME
assert shctl info | grep MODULE_HOME | grep $MODULE_HOME
assert shctl info | grep DATA_HOME | grep $DATA_HOME
assert shctl info | grep MODULE_DIR | grep $MODULE_DIR
assert shctl info | grep DATA_DIR | grep $DATA_DIR
$? = 0
assert shctl info
assert !$reply.empty()
assert !$reply['%regex'].empty()
assert $reply['%regex'] =~ $/PCRE2 \d+\.\d+/
assert $reply['VERSION'] == $VERSION
assert !$reply['%compiler'].empty()
assert $reply["MACHTYPE"] == $MACHTYPE
assert $reply["OSTYPE"] == $OSTYPE
assert $reply["CONFIG_HOME"] == $CONFIG_HOME
assert $reply["MODULE_HOME"] == $MODULE_HOME
assert $reply["DATA_HOME"] == $DATA_HOME
assert $reply["MODULE_DIR"] == $MODULE_DIR
assert $reply["DATA_DIR"] == $DATA_DIR

if (test -e /dev/full) {
    assert "$(shctl info 2>&1 > /dev/full)" =~ $/shctl: io error: .+/
    assert $? == 1
}

# invalid optiopn
assert shctl -s 2>&1 | grep ': shctl: -s: invalid option'
assert shctl -s 2>&1 | grep 'shctl: shctl \[subcommand]'
assert $PIPESTATUS[0] == 2

# help
assert help shctl | grep ': shctl \[subcommand]'
assert help shctl | grep ' Query and set runtime information'
assert $PIPESTATUS[0] == 0

assert shctl -h| grep ': shctl \[subcommand]'
assert shctl -h| grep ' Query and set runtime information'
assert $PIPESTATUS[0] == 2

assert shctl --help| grep ': shctl \[subcommand]'
assert shctl --help| grep ' Query and set runtime information'
assert $PIPESTATUS[0] == 2