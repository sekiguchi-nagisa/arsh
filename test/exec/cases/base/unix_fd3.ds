
function stream() : FD {
    return <(for(var i = 0; $i < 1000000000000000000; $i++) {
        echo abcdefghijklmnopqrstuvwxyz
    })
}

let fd = $stream()

ff() {
    assert sh -c 'read AAA < "$1"' dummy $fd
    assert sh -c 'read AAA < "$1"' dummy $1
    assert sh -c 'read AAA < "$1"' dummy $fd

    assert call $BIN_NAME -c 'read < "$1"; assert $REPLY == "abcdefghijklmnopqrstuvwxyz"' dummy $1
    assert call $BIN_NAME -c 'read < "$1"; assert $REPLY == "abcdefghijklmnopqrstuvwxyz"' dummy $fd

    assert sh -c 'read AAA < "$1"' dummy $1
    assert sh -c 'read AAA < "$1"' dummy $fd
}

ff $fd

# pass invalid fd
$fd.close()

var ex = 34 as Any
try {
    ff $fd
    assert false
} catch e {
    $ex = $e
}
assert $ex is SystemError
assert ($ex as SystemError).message() =~ $/failed to pass FD object to command arguments/

true
