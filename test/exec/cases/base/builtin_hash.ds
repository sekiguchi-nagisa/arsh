# invalid option
assert hash -e 2>&1 | grep ': hash: -e: invalid option'
assert $PIPESTATUS[0] == 2

# help
assert help hash | grep '^hash: hash \[-r] \[command ...]'
assert help hash | grep 'Cache file path of specified commands'
assert $PIPESTATUS[0] == 0

assert hash -h| grep '^hash: hash \[-r] \[command ...]'
assert hash -h| grep 'Cache file path of specified commands'
assert $PIPESTATUS[0] == 2

assert hash --help| grep '^hash: hash \[-r] \[command ...]'
assert hash --help| grep 'Cache file path of specified commands'
assert $PIPESTATUS[0] == 2

# show all cache (empty)
assert("$(hash)" == "hash: file path cache is empty")

# add cache
hash ls cat ps
assert($? == 0)
assert(hash | grep "ls=")
assert(hash | grep "cat=")
#assert(hash | grep "grep=") # 'grep' is not cached due to calling from pipe
assert(hash | grep "ps=")

# add cache (not found)
hash hfreiufre
assert($? == 1)
assert("$(hash hfreiufre 2>&1)" == "${$SCRIPT_NAME.basename()}:32: hash: hfreiufre: not found")

hash $'ls\x00ww'
assert($? == 1)
assert("$(hash $'ls\x00ww' 2>&1)" == "${$SCRIPT_NAME.basename()}:36: hash: ls\x00ww: not found")

# remove cache
hash -r cat ps
assert(hash | grep "ls=")
hash | grep "cat="
assert($? != 0)
hash | grep "ps="
assert($? != 0)

# remove cache (not found)
hash -r hfeirufjae
assert($? == 0)

hash ls
hash -r $'ls\x00qq'
assert($? == 0)

# remove all cache
hash -r
assert("$(hash)" == "hash: file path cache is empty")

# remove all cache (empty)
assert(hash -r)

## error
if (test -e /dev/full) {
    var a = "$(hash 2>&1 > /dev/full)"
    assert $a =~ $/hash: io error: .+/ : $a
    assert $? == 1

    assert "$(hash ps && hash 2>&1 > /dev/full)" =~ $/hash: io error: .+/
    assert $? == 1
}

# auto clear hash via PATH modification
## setenv/unset builtins
hash ls ps mv wc
setenv PATH=/usr/bin
assert "$(hash)" == "hash: file path cache is empty"

hash ls ps mv wc
unsetenv PATH
assert "$(hash)" == "hash: file path cache is empty"

## env variable
hash ls ps mv wc
$PATH = "/usr/bin:/bin"
assert "$(hash)" == "hash: file path cache is empty"

{
    unsetenv PATH
    hash ls ps mv wc
    importenv PATH : "/usr/bin:/bin"
    assert "$(hash)" == "hash: file path cache is empty"
}

{
    hash ls ps mv wc
    exportenv PATH = "/usr/bin:/bin:/usr/local/bin"
    assert "$(hash)" == "hash: file path cache is empty"
}

## temporary env
hash ls ps mv wc
assert "$(hash)" != "hash: file path cache is empty"
assert PATH= "$(hash)" == "hash: file path cache is empty"

hash ls ps mv wc
PATH=/usr/bin:/bin:/usr/local/bin
assert "$(hash)" == "hash: file path cache is empty"

hash ls ps mv wc
PATH=/usr/bin {
    assert "$(hash)" == "hash: file path cache is empty"
    hash ls ps mv wc
}
assert "$(hash)" == "hash: file path cache is empty"

true