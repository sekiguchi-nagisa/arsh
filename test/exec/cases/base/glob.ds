
var ex = 34 as Any

# if not match pattern, throw GlobbingError
try { echo ~????????; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo "~/"*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo /"*"*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo /'?'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo ?\**; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo '~/'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo *\*\??; } catch $e { $ex = $e; }
assert $ex is GlobbingError
assert ($ex as GlobbingError).message() == "no matches for glob pattern \`*\*\??'"

$ex = 2
try {
    @(
        ~/fjarifja/*
    )
} catch e { $ex = $e; }
assert ($ex as GlobbingError).lineno() == 36

# glob pattern have null characters, throw GlobbingError
$ex = 34
try { echo *$'\x00'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

# tilde expansion failed before glob
$ex = 34
try { echo ~fjrei/*; } catch e { $ex = $e; }
assert ($ex as TildeError).message() =~ $/~fjrei/

assert $(echo *).sort().join(" ") == $(sh -c 'echo *').sort().join(" ")
assert $(echo ~/*).sort().join(" ") == $(sh -c 'echo ~/*').sort().join(" ")
assert $(echo ./*).sort().join(" ") == $(sh -c 'echo ./*').sort().join(" ")
assert $(echo ./././*).sort().join(" ") == $(sh -c 'echo ./././*').sort().join(" ")
assert $(echo /us*/).sort().join(" ") == $(sh -c 'echo /us*/').sort().join(" ")
assert "$(echo ///us*///)" == "$(echo /us*/)"
assert "$(echo ///us*///././)" == "$(echo /us*/././)"
assert "$(echo ~/*)" == "$(echo ~"/"*)"
assert "$(echo ~/*)" == "$(echo ~'/'*)"
assert "$(echo ~/*)" == "$(echo ~/""*)"
assert "$(echo ~/*)" == "$(echo ~/*"")"
assert "$(echo *)" == "$(echo ""*)"

# null glob
shctl set nullglob
$ex = 2
try { echo "~/"*; } catch $e { $ex = $e; }
assert $ex is Int   # no error
assert $(echo "~/"*).empty()

# dot glob
shctl unset nullglob
var a = $(echo ~/.* ~/*).sort().join(" ")
assert $(echo ~/*).sort().join(" ") != $a
shctl set dotglob
assert $(echo ~/*).sort().join(" ") == $a

# fast glob
var aa = @(../*/../*)
shctl set fastglob
var bb = @(../*/../*)
assert $aa.size() > $bb.size()

# fail glob
shctl unset fastglob nullglob dotglob failglob
$aa = @(\**"\\2")
assert $aa.size() == 1
assert $aa[0] == '**\2'

$aa = @(*\*\??)
assert $aa.size() == 1
assert $aa[0] == '**??'


# fail glob and null glob
shctl set failglob nullglob
assert @(\**"\\2").empty()

true