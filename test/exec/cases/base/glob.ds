
var ex = 34 as Any

# if not match pattern, throw GlobbingError
try { echo ~????????; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo "~/"*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo /"*"*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo /'?'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo ?\**; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo '~/'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

$ex = 2
try { echo *\*\??; } catch $e { $ex = $e; }
assert $ex is GlobbingError
assert ($ex as GlobbingError).message() == "no matches for glob pattern \`*\*\??'"

$ex = 2
try {
    @(
        ~/fjarifja/*
    )
} catch e { $ex = $e; }
assert ($ex as GlobbingError).lineno() == 36

$ex = 2
try { echo [[:aaa:]]*; } catch $e { $ex = $e; }
assert $ex is GlobbingError
assert ($ex as GlobbingError).message() == "undefined character class: aaa in \`[[:aaa:]]*'"

$ex = 2
try { echo [a-zA-Z; } catch $e { $ex = $e; }
assert $ex is GlobbingError
assert ($ex as GlobbingError).message() == "bracket expression must end with \`]' in \`[a-zA-Z'"

$ex = 2
try { var m = '-'; echo [9${m}0]*; } catch $e { $ex = $e; }
assert $ex is GlobbingError
assert ($ex as GlobbingError).message() == "no matches for glob pattern \`[9\\-0]*'"

$ex = 2
try { echo ~/*fjeirjf*${'[0-9]'}; } catch $e { $ex = $e; }
assert ($ex as GlobbingError).message() == "no matches for glob pattern \`$HOME/*fjeirjf*\[0\-9\]'"


# glob pattern have null characters, throw GlobbingError
$ex = 34
try { echo *$'\x00'*; } catch $e { $ex = $e; }
assert $ex is GlobbingError

# tilde expansion failed before glob
$ex = 34
try { echo ~fjrei/*; } catch e { $ex = $e; }
assert ($ex as TildeError).message() =~ $/~fjrei/

assert $(echo *).sort().join(" ") == $(sh -c 'echo *').sort().join(" ")
assert $(echo ~/*).sort().join(" ") == $(sh -c 'echo ~/*').sort().join(" ")
assert $(echo ./*).sort().join(" ") == $(sh -c 'echo ./*').sort().join(" ")
assert $(echo ./././*).sort().join(" ") == $(sh -c 'echo ./././*').sort().join(" ")
assert $(echo /us*/).sort().join(" ") == $(sh -c 'echo /us*/').sort().join(" ")
assert "$(echo ///us*///)" == "$(echo /us*/)"
assert "$(echo ///us*///././)" == "$(echo /us*/././)"
assert "$(echo ~/*)" == "$(echo ~"/"*)"
assert "$(echo ~/*)" == "$(echo ~'/'*)"
assert "$(echo ~/*)" == "$(echo ~/""*)"
assert "$(echo ~/*)" == "$(echo ~/*"")"
assert "$(echo *)" == "$(echo ""*)"
assert "$(echo [)" == '['
assert "$(echo ${34}['')" == '['
assert "$(echo ])" == ']'
assert "$(echo ]2345)" == ']2345'
assert "$(echo [ ])" == '[ ]'
assert "$(echo [${""}""$34)" == '['
assert $(echo /[a-zA-Z]*).sort().join(" ") == $(sh -c 'echo /[a-zA-Z]*').sort().join(" ")
assert $(echo /[!@]*).sort().join(" ") == $(sh -c 'echo /[!@]*').sort().join(" ")
assert $(echo /[^@]*).sort().join(" ") == $(sh -c 'echo /[^@]*').sort().join(" ")
assert $(echo /[[:alnum:]]*).sort().join(" ") == $(sh -c 'echo /[[:alnum:]]*').sort().join(" ")
assert $(echo ~/[a-z]*).sort().join(" ") == $(sh -c 'echo ~/[a-z]*').sort().join(" ")

# globstar
{
    shctl set globstar
    var a = @($SCRIPT_DIR/../**)
    shctl unset globstar
    var b = @($SCRIPT_DIR/../**)
    assert $a.size() != $b.size()
}

# null glob
shctl set nullglob
$ex = 2
try { echo "~/"*; } catch $e { $ex = $e; }
assert $ex is Int   # no error
assert $(echo "~/"*).empty()

# dot glob
shctl unset nullglob
var a = $(echo ~/.* ~/*).sort().join(" ")
assert $(echo ~/*).sort().join(" ") != $a
shctl set dotglob
assert $(echo ~/*).sort().join(" ") == $a

# fast glob
var aa = @(../*/../*)
shctl set fastglob
var bb = @(../*/../*)
assert $aa.size() > $bb.size()

# fail glob
shctl unset fastglob nullglob dotglob failglob
$aa = @(\**"\\2")
assert $aa.size() == 1
assert $aa[0] == '**\2'

$aa = @(*\*\??)
assert $aa.size() == 1
assert $aa[0] == '**??'

$aa = @(~[a-z]*)
assert $aa.size() == 1
assert $aa[0] == '~[a-z]*'

var meta = "[a-zA-Z]"
$aa = @(/$meta*)
assert $aa.size() == 1
assert $aa[0] == '/[a-zA-Z]*'

$meta = "a-z0-9"
$aa = @(/[$meta]*)
assert $aa.size() == 1
assert $aa[0] == '/[a-z0-9]*'

$meta = "a-zA-Z"
$aa = @(/[A-Z][$meta]*)
assert $aa.size() == 1
assert $aa[0] == '/[A-Z][a-zA-Z]*'


$meta = "^"
$aa = @(/[${meta}@]*)
assert $aa.size() == 1
assert $aa[0] == '/[^@]*'

$meta = "!"
$aa = @(/[${meta}@\]]*)
assert $aa.size() == 1
assert $aa[0] == '/[!@]]*'

$meta = "-"
$aa = @(/[9${meta}0@\-]*)
assert $aa.size() == 1
assert $aa[0] == '/[9-0@-]*'

$meta = "*"
$aa = @(/[a-z]$meta)
assert $aa.size() == 1
assert $aa[0] == '/[a-z]*'

$aa = @(~/*jfi[z-a]rea**${'[0-9]*'})
assert $aa.size() == 1
assert $aa[0] == "$HOME/*jfi[z-a]rea**[0-9]*"

$aa = @(AAA=~/*)
assert $aa.size() == 1
assert $aa[0] == "AAA=$HOME/*"

$aa = @(~/AAA=~/*)
assert $aa.size() == 1
assert $aa[0] == "$HOME/AAA=~/*"

$aa = @(*/AA=~)
assert $aa.size() == 1
assert $aa[0] == '*/AA=~'  # not perform tilde expansion if forward element is glob pattern


# fail glob and null glob
shctl set failglob nullglob
assert @(\**"\\2").empty()

true