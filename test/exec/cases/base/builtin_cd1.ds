# builtin cd command

cd ~
assert($PWD == "$(pwd)")
assert($PWD == "$(echo ~+)")

assert($PWD == $HOME)

var OLD = $PWD

cd ~
assert($PWD == "$(pwd)")
assert($OLDPWD == $OLD)


# error
cd fhreuifrevk
assert($? == 1)

# error message
var DIR = 'jfreire'
cd $DIR 2>&1 | grep ": cd: $DIR:"
assert($? == 0)

assert "$(cd %25~あああ𩒐.ds 2>&1)" =~ $/cd: %25~あああ𩒐.ds: No such file or directory/

# empty HOME
$HOME = ''

cd ~    # if HOME is empty, not change PWD, but OLDPWD is changed
assert($? == 0)
assert($OLDPWD == $PWD)

# empty arg
cd "$(echo)"    # not change PWD, but OLDPWD is changed
assert($? == 0)
assert($OLDPWD == $PWD)

# option '-'
assert("$(cd -)" == $OLDPWD)
{
    let OLDPWD2 = $OLDPWD
    let PWD2 = $PWD
    cd -
    assert($OLDPWD == $PWD2)
    assert($PWD == $OLDPWD2)
    cd -
    assert($OLDPWD == $OLDPWD2)
    assert($PWD == $PWD2)
}


assert(help cd | grep 'cd: cd \[-LP] \[dir]$')
assert(cd  -Lh | grep 'cd: cd \[-LP] \[dir]$')
assert(cd  -Lh | grep 'Changing the current directory to DIR')
assert(cd  -L --help | grep 'cd: cd \[-LP] \[dir]$')
assert(cd  --help | grep 'Changing the current directory to DIR')
assert $PIPESTATUS[0] == 2 && $PIPESTATUS[1] == 0