#$test($err = '')

assert (echo hello | grep hello) is Boolean
assert $PIPESTATUS.size() == 2
assert $PIPESTATUS[0] == 0
assert $PIPESTATUS[1] == 0

assert (cat /dev/zero | 34) is Int  # not show signal message in last-pipe
assert $PIPESTATUS.size() == 2
assert $PIPESTATUS[0] == 141 : "require: 141, actual: ${$PIPESTATUS[0]}" # EPIPE
assert $PIPESTATUS[1] == 0 : "require: 0, actual: ${$PIPESTATUS[1]}"

var c = 0
echo -e 'a\nb\nc\nd\ne' | while (read) {
    var ch = 'c'
    if $REPLY == $ch {
        break
    }
    $c++
}
assert $c == 2  # executed in parent shell

$c = 0
{ $c = 10; } | 34
assert $c == 0
assert $PIPESTATUS.size() == 2
assert $PIPESTATUS[0] == 0
assert $PIPESTATUS[1] == 0


var t = echo | ($PID, $PPID)    # not show signal message in last-pipe
assert $t._0 == $PID
assert $t._1 == $PPID

# ignore read pipe
cat /dev/urandom | {}    # not show signal message in last-pipe
assert $PIPESTATUS.size() == 2
assert $PIPESTATUS[0] == 141
assert $PIPESTATUS[1] == 0
