
assert { fg; $?; } == 1
assert "$(fg 2>&1)" == 'builtin_fg_bg.ds:3: fg: no job control in this shell'

assert { bg; $?; } == 1
assert "$(bg 2>&1)" == 'builtin_fg_bg.ds:6: bg: no job control in this shell'

# invalid option (disabled)
assert fg -q 2>&1 | grep ': fg: no job control in this shell'
assert $PIPESTATUS[0] == 1 && $PIPESTATUS[1] == 0

assert bg -q 2>&1 | grep ': bg: no job control in this shell'
assert $PIPESTATUS[0] == 1 && $PIPESTATUS[1] == 0

# help
assert help fg | grep '^fg: fg \[job_spec]'
assert $PIPESTATUS[0] == 0 && $PIPESTATUS[1] == 0
assert help bg | grep '^bg: bg \[job_spec ...]'
assert $PIPESTATUS[0] == 0 && $PIPESTATUS[1] == 0

## disable help if job control is disabled
assert fg -h 2>&1| grep ': fg: no job control in this shell'
assert $PIPESTATUS[0] == 1
assert fg --help 2>&1| grep ': fg: no job control in this shell'
assert $PIPESTATUS[0] == 1

assert bg -h 2>&1 | grep ': bg: no job control in this shell'
assert $PIPESTATUS[0] == 1
assert bg --help 2>&1 | grep ': bg: no job control in this shell'
assert $PIPESTATUS[0] == 1

## show help if job control is enabled
assert exec $YDSH_BIN -c 'shctl set monitor; fg -h' | grep '^fg: fg \[job_spec]'
assert $PIPESTATUS[0] == 2
assert exec $YDSH_BIN -c 'shctl set monitor; fg --help' | grep '^fg: fg \[job_spec]'
assert $PIPESTATUS[0] == 2

assert exec $YDSH_BIN -c 'shctl set monitor; bg -h' | grep '^bg: bg \[job_spec ...]'
assert $PIPESTATUS[0] == 2
assert exec $YDSH_BIN -c 'shctl set monitor; bg --help' | grep '^bg: bg \[job_spec ...]'
assert $PIPESTATUS[0] == 2

## show invalid option if job control is enabled
assert exec $YDSH_BIN -c 'shctl set monitor; fg -q' 2>&1 | grep ': fg: -q: invalid option'
assert $PIPESTATUS[0] == 2

assert exec $YDSH_BIN -c 'shctl set monitor; bg -q' 2>&1 | grep ': bg: -q: invalid option'
assert $PIPESTATUS[0] == 2

true