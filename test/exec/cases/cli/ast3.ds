
source $SCRIPT_DIR/expect.ds

var mod = "$SCRIPT_DIR/../../_module4test/throw.ds".realpath()!
let len = $mod.size()

## dump untyped test 

var out = "### dump untyped AST ###
sourceName: \"(string)\"
nodes:
  - nodeKind: SourceList
    token:
      pos: 0
      size: ${$len+'source '.size()}
    type:
    pathNode:
      nodeKind: CmdArg
      token:
        pos: 7
        size: ${len}
      type:
      expansionSize: 0
      braceExpansion: false
      segmentNodes:
        - nodeKind: String
          token:
            pos: 7
            size: ${len}
          type:
          kind: \"STRING\"
          value: \"$mod\"
    constNodes:
    name: null
    optional: false
    inlined: false
    curIndex: 0
    pathList:
maxVarNum: 0
maxGVarNum: 43

sourceName: \"$mod\"
nodes:
  - nodeKind: Function
    token:
      pos: 1
      size: 39
    type:
    kind: \"FUNC\"
    funcName:
      token:
        pos: 10
        size: 4
      name: \"hoge\"
    paramNodes:
      - nodeKind: VarDecl
        token:
          pos: 15
          size: 8
        type:
        varName:
          token:
            pos: 15
            size: 2
          name: \"s\"
        exprNode:
          nodeKind: Type
          token:
            pos: 20
            size: 3
          type:
          typeKind: \"Base\"
          typeName: \"Int\"
          handle: null
        kind: \"VAR\"
        handle: null
    returnTypeNode:
      nodeKind: Type
      token:
        pos: 0
        size: 0
      type:
      typeKind: \"Base\"
      typeName: \"Void\"
      handle: null
    recvTypeNode: null
    blockNode:
      nodeKind: Block
      token:
        pos: 25
        size: 15
      type:
      nodes:
        - nodeKind: BinaryOp
          token:
            pos: 31
            size: 7
          type:
          leftNode:
            nodeKind: Number
            token:
              pos: 31
              size: 2
            type:
            kind: \"Int\"
            intValue: 10
          rightNode:
            nodeKind: Var
            token:
              pos: 36
              size: 2
            type:
            varName: \"s\"
            handle: null
            extraOp: \"NONE\"
            extraValue: 0
          op: \"/\"
          optNode: null
      baseIndex: 0
      varSize: 0
      maxVarSize: 0
      firstDeferOffset: -1
    maxVarNum: 0
    handle: null
    resolvedType: null"

$expect("$(ds -n --dump-untyped-ast -c "source $mod")", 0, $out)


## typed ast

$out = "### dump typed AST ###
sourceName: \"(string)\"
nodes:
  - nodeKind: SourceList
    token:
      pos: 0
      size: ${$len + 'source '.size()}
    type: \"Void\"
    pathNode:
      nodeKind: CmdArg
      token:
        pos: 7
        size: ${len}
      type: \"String\"
      expansionSize: 0
      braceExpansion: false
      segmentNodes:
        - nodeKind: String
          token:
            pos: 7
            size: ${len}
          type: \"String\"
          kind: \"STRING\"
          value: \"$mod\"
    constNodes:
      - nodeKind: String
        token:
          pos: 7
          size: ${len}
        type: \"String\"
        kind: \"STRING\"
        value: \"$mod\"
      - nodeKind: Empty
        token:
          pos: 0
          size: 0
        type:
    name: null
    optional: false
    inlined: false
    curIndex: 0
    pathList:
      - \"$mod\"
  - nodeKind: Source
    token:
      pos: 0
      size: ${$len + 'source '.size()}
    type: \"Void\"
    name: null
    modType: \"%mod2\"
    pathName: \"$mod\"
    firstAppear: true
    inlined: false
    maxVarNum: 0
maxVarNum: 0
maxGVarNum: 43

sourceName: \"$mod\"
nodes:
  - nodeKind: Function
    token:
      pos: 1
      size: 39
    type: \"Void\"
    kind: \"FUNC\"
    funcName:
      token:
        pos: 10
        size: 4
      name: \"hoge\"
    paramNodes:
      - nodeKind: VarDecl
        token:
          pos: 15
          size: 8
        type: \"Void\"
        varName:
          token:
            pos: 15
            size: 2
          name: \"s\"
        exprNode:
          nodeKind: Type
          token:
            pos: 20
            size: 3
          type: \"Int\"
          typeKind: \"Base\"
          typeName: \"Int\"
          handle: null
        kind: \"VAR\"
        handle:
          index: 0
          kind: \"VAR\"
          attribute: \"\"
    returnTypeNode:
      nodeKind: Type
      token:
        pos: 0
        size: 0
      type: \"Void\"
      typeKind: \"Base\"
      typeName: \"Void\"
      handle: null
    recvTypeNode: null
    blockNode:
      nodeKind: Block
      token:
        pos: 25
        size: 15
      type: \"Nothing\"
      nodes:
        - nodeKind: TypeOp
          token:
            pos: 31
            size: 7
          type: \"Void\"
          exprNode:
            nodeKind: BinaryOp
            token:
              pos: 31
              size: 7
            type: \"Int\"
            leftNode: null
            rightNode: null
            op: \"/\"
            optNode:
              nodeKind: Apply
              token:
                pos: 31
                size: 4
              type: \"Int\"
              exprNode:
                nodeKind: Access
                token:
                  pos: 31
                  size: 4
                type: \"Any\"
                recvNode:
                  nodeKind: Number
                  token:
                    pos: 31
                    size: 2
                  type: \"Int\"
                  kind: \"Int\"
                  intValue: 10
                nameInfo:
                  token:
                    pos: 34
                    size: 1
                  name: \"%b_/\"
                handle: null
                additionalOp: \"NOP\"
              argsNode:
                nodeKind: Args
                token:
                  pos: 0
                  size: 38
                type: \"Void\"
                nodes:
                  - nodeKind: Var
                    token:
                      pos: 36
                      size: 2
                    type: \"Int\"
                    varName: \"s\"
                    handle:
                      index: 0
                      kind: \"VAR\"
                      attribute: \"\"
                    extraOp: \"NONE\"
                    extraValue: 0
              handle: \"9\"
              kind: \"METHOD_CALL\"
              attr: \"BINARY\"
          targetTypeToken: null
          opKind: \"TO_VOID\"
        - nodeKind: Jump
          token:
            pos: 0
            size: 0
          type: \"Nothing\"
          opKind: \"RETURN\"
          fieldOffset: 0
          fieldSize: 0
          tryDepth: 0
          exprNode:
            nodeKind: Empty
            token:
              pos: 0
              size: 0
            type: \"Void\"
      baseIndex: 0
      varSize: 1
      maxVarSize: 1
      firstDeferOffset: -1
    maxVarNum: 1
    handle:
      index: 42
      kind: \"VAR\"
      attribute: \"READ_ONLY | GLOBAL\"
    resolvedType: \"(Int) -> Void\""

$expect("$(ds -n --dump-ast -c "source $mod")", 0, $out)