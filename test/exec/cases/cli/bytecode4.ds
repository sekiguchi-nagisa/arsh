
source $SCRIPT_DIR/expect.ds

# for complex expression

var out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 20
  max stack depth: 6
  number of local variable: 0
  number of global variable: 56
Code:
   0: LOAD_CONST  2
   2: NEW_CMD
   3: PUSH_NULL
   4: PUSH_META  10  0
   7: LOAD_CONST  3
   9: PUSH_META  11  0
  12: PUSH_NULL
  13: ADD_EXPANDING  3  2
  16: CALL_CMD
  17: POP
  18: PUSH_INVALID
  19: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo
  3: Any (49, 53, 1, [0, 0])
Line Number Table:
  lineNum: 1, address:  4
Exception Table:"

$expect("$(ds --dump-code -n -c 'echo {1..5}')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 20
  max stack depth: 6
  number of local variable: 0
  number of global variable: 56
Code:
   0: LOAD_CONST  2
   2: NEW_CMD
   3: PUSH_NULL
   4: PUSH_META  10  0
   7: LOAD_CONST  3
   9: PUSH_META  11  0
  12: PUSH_NULL
  13: ADD_EXPANDING  3  2
  16: CALL_CMD
  17: POP
  18: PUSH_INVALID
  19: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo
  3: Any (5, -1, 2, [1, 3])
Line Number Table:
  lineNum: 1, address:  4
Exception Table:"

$expect("$(ds --dump-code -n -c 'echo {-01..6..-2}')", 0, $out)


## try-catch
$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 53
  max stack depth: 4
  number of local variable: 2
  number of global variable: 56
Code:
   0: TRY_GUARD0
   1: LOAD_GLOBAL  26
   4: STORE_LOCAL  0
   6: LOAD_CONST  2
   8: PIPELINE_LP 2  6  13
  14: LOAD_CONST  3
  16: NEW_CMD
  17: PUSH_NULL
  18: CALL_CMD_NOFORK
  19: TERM_HOOK
  20: SUBSHELL_EXIT
  21: STORE_LOCAL  1
  23: PUSH_FALSE
  24: SYNC_PIPESTATUS  1
  26: RECLAIM_LOCAL  1  1
  29: POP
  30: PUSH_INT  34
  32: STORE_LOCAL  1
  34: RECLAIM_LOCAL  1  1
  37: RECLAIM_LOCAL  0  1
  40: JUMP_TRY  51
  45: POP
  46: GOTO  51
  51: PUSH_INVALID
  52: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo\x00\$false
  3: String echo
Line Number Table:
  lineNum: 1, address:  1
Exception Table:
  begin: 14, end: 19, type: process guard%%, dest: 19, offset: 0, size: 0, level: 0
  begin: 0, end: 40, type: Error, dest: 45, offset: 0, size: 2, level: 1"

$expect("$(ds --dump-code -n -c 'try { var a = $STDIN; echo | $false; {var b = 34; } } catch _ {}')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 36
  max stack depth: 3
  number of local variable: 2
  number of global variable: 56
Code:
   0: TRY_GUARD0
   1: LOAD_GLOBAL  26
   4: STORE_LOCAL  0
   6: NEW_REDIR
   7: LOAD_CONST  2
   9: ADD_REDIR_OP1  2
  11: DO_REDIR
  12: STORE_LOCAL  1
  14: PUSH_INT  34
  16: RECLAIM_LOCAL  1  1
  19: RECLAIM_LOCAL  0  1
  22: POP
  23: JUMP_TRY  34
  28: POP
  29: GOTO  34
  34: PUSH_INVALID
  35: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String /dev/null
Line Number Table:
  lineNum: 1, address:  1
Exception Table:
  begin: 0, end: 23, type: Error, dest: 28, offset: 0, size: 2, level: 1"

$expect("$(ds --dump-code -n -c 'try { var a = $STDIN; 34 with > /dev/null; } catch _ {}')", 0, $out)
