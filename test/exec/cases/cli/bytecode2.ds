
source $SCRIPT_DIR/expect.ds

## for defer code layput

var out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 38
  max stack depth: 5
  number of local variable: 1
  number of global variable: 52
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  0
   4: ENTER_FINALLY  14
   9: GOTO  33
  14: LOAD_CONST  2
  16: NEW_CMD
  17: NEW_REDIR
  18: LOAD_LOCAL  0
  20: CALL_BUILTIN2  1  %str
  23: ADD_CMD_ARG  1
  25: LOAD_CONST  3
  27: ADD_REDIR_OP  1
  29: DO_REDIR
  30: CALL_CMD
  31: POP
  32: EXIT_FINALLY
  33: RECLAIM_LOCAL  0  1
  36: PUSH_INVALID
  37: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo
  3: String /dev/null
Line Number Table:
  lineNum: 1, address: 18
Exception Table:
  begin: 4, end: 14, type: pseudo top%%, dest: 14, offset: 0, size: 0"

# last defer statement is simplified to block statement
$expect("$(ds --dump-code -c '{ var a = 23; defer { echo $a > /dev/null; }; }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 30
  max stack depth: 4
  number of local variable: 1
  number of global variable: 52
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  0
   4: LOAD_CONST  2
   6: NEW_CMD
   7: PUSH_NULL
   8: CALL_CMD
   9: LOAD_CONST  3
  11: NEW_CMD
  12: NEW_REDIR
  13: LOAD_LOCAL  0
  15: CALL_BUILTIN2  1  %str
  18: ADD_CMD_ARG  1
  20: LOAD_CONST  4
  22: ADD_REDIR_OP  1
  24: DO_REDIR
  25: CALL_CMD
  26: POP
  27: EXIT_FINALLY
  28: PUSH_INVALID
  29: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String exit
  3: String echo
  4: String /dev/null
Line Number Table:
  lineNum: 1, address:  8
Exception Table:
  begin: 4, end: 9, type: pseudo top%%, dest: 9, offset: 0, size: 0"

$expect("$(ds --dump-code -c '{ var a = 23; defer { echo $a > /dev/null; }; exit; }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 15
  max stack depth: 2
  number of local variable: 0
  number of global variable: 53
Code:
   0: LOAD_CONST  2
   2: STORE_GLOBAL  52
   5: PUSH_STR1  `f'
   7: NEW_CMD
   8: PUSH_NULL
   9: CALL_UDC  52
  12: POP
  13: PUSH_INVALID
  14: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: Void command(f)
Line Number Table:
  lineNum: 1, address:  9
Exception Table:

DSCode: command f
  code size: 41
  max stack depth: 4
  number of local variable: 16
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  14
   4: PUSH_INT  99
   6: STORE_LOCAL  15
   8: LOAD_LOCAL  15
  10: STORE_LOCAL  14
  12: LOAD_GLOBAL  13
  15: ENTER_FINALLY  21
  20: RETURN_UDC
  21: RECLAIM_LOCAL  15  1
  24: ASSERT_ENABLED  16
  27: LOAD_LOCAL  14
  29: PUSH_INT  99
  31: CALL_BUILTIN2  2  %eq
  34: BRANCH_NOT  6
  37: LOAD_CONST  2
  39: ASSERT_FAIL
  40: EXIT_FINALLY
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String `\$a == 99'
Line Number Table:
  lineNum: 1, address:  8
Exception Table:
  begin: 4, end: 21, type: pseudo top%%, dest: 21, offset: 0, size: 0"

$expect("$(ds --dump-code -c 'f() { var a = 23; defer { assert $a == 99; }; var b = 99;$a = $b; }; f')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 7
  max stack depth: 1
  number of local variable: 0
  number of global variable: 53
Code:
  0: LOAD_CONST  2
  2: STORE_GLOBAL  52
  5: PUSH_INVALID
  6: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: %mod1.AAA function(AAA)
Line Number Table:
Exception Table:

DSCode: function AAA
  code size: 22
  max stack depth: 3
  number of local variable: 2
Code:
   0: LOAD_LOCAL  0
   2: STORE_LOCAL  1
   4: NEW  %mod1.AAA
   8: INIT_FIELDS  1  1
  11: ENTER_FINALLY  17
  16: RETURN
  17: PUSH_INT  34
  19: STORE_LOCAL  0
  21: EXIT_FINALLY
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  0
Exception Table:
  begin: 4, end: 17, type: pseudo top%%, dest: 17, offset: 0, size: 0"

$expect("$(ds --dump-code -c 'typedef AAA($a : Int) { var v = $a; defer { $a = 34; } }')", 0, $out)