
source $SCRIPT_DIR/expect.ds

## for defer code layout

var out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 38
  max stack depth: 4
  number of local variable: 1
  number of global variable: 56
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  0
   4: TRY_GUARD0
   5: ENTER_FINALLY  15
  10: JUMP_TRY  33
  15: LOAD_CONST  2
  17: NEW_CMD
  18: NEW_REDIR
  19: LOAD_LOCAL  0
  21: CALL_BUILTIN  1  %str
  24: ADD_CMD_ARG
  25: LOAD_CONST  3
  27: ADD_REDIR_OP1  2
  29: DO_REDIR
  30: CALL_CMD
  31: POP
  32: EXIT_FINALLY
  33: RECLAIM_LOCAL  0  1
  36: PUSH_INVALID
  37: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo
  3: String /dev/null
Line Number Table:
  lineNum: 1, address: 19
Exception Table:
  begin: 4, end: 15, type: Throwable, dest: 15, offset: 0, size: 0, level: 1
  begin: 15, end: 32, type: process guard%%, dest: 32, offset: 0, size: 0, level: 0"

# last defer statement is simplified to block statement
$expect("$(ds --dump-code -c '{ var a = 23; defer { echo $a > /dev/null; }; }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 30
  max stack depth: 5
  number of local variable: 1
  number of global variable: 56
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  0
   4: TRY_GUARD0
   5: LOAD_CONST  2
   7: NEW_CMD
   8: PUSH_NULL
   9: CALL_CMD
  10: LOAD_CONST  3
  12: NEW_CMD
  13: NEW_REDIR
  14: LOAD_LOCAL  0
  16: CALL_BUILTIN  1  %str
  19: ADD_CMD_ARG
  20: LOAD_CONST  4
  22: ADD_REDIR_OP1  2
  24: DO_REDIR
  25: CALL_CMD
  26: POP
  27: EXIT_FINALLY
  28: PUSH_INVALID
  29: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String exit
  3: String echo
  4: String /dev/null
Line Number Table:
  lineNum: 1, address:  9
Exception Table:
  begin: 4, end: 10, type: Throwable, dest: 10, offset: 0, size: 0, level: 1
  begin: 10, end: 27, type: process guard%%, dest: 27, offset: 0, size: 0, level: 0"

$expect("$(ds --dump-code -c '{ var a = 23; defer { echo $a > /dev/null; }; exit; }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 15
  max stack depth: 2
  number of local variable: 0
  number of global variable: 57
Code:
   0: LOAD_CONST  2
   2: STORE_GLOBAL  56
   5: PUSH_STR1  \`f'
   7: NEW_CMD
   8: PUSH_NULL
   9: CALL_UDC  56
  12: POP
  13: PUSH_INVALID
  14: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: Command command(%mod1.f)
Line Number Table:
  lineNum: 1, address:  9
Exception Table:

ARCode: command f
  code size: 45
  max stack depth: 5
  number of local variable: 6
Code:
   0: PUSH_INT  23
   2: STORE_LOCAL  4
   4: TRY_GUARD0
   5: PUSH_INT  99
   7: STORE_LOCAL  5
   9: LOAD_LOCAL  5
  11: STORE_LOCAL  4
  13: LOAD_SPECIAL  3
  15: ENTER_FINALLY  21
  20: RETURN_UDC
  21: RECLAIM_LOCAL  5  1
  24: ASSERT_ENABLED  20
  27: LOAD_LOCAL  4
  29: PUSH_INT  99
  31: DUP2
  32: CALL_BUILTIN  2  %b_==
  35: BRANCH_NOT  7
  38: LOAD_CONST  0
  40: ASSERT_FAIL2  1
  42: POP
  43: POP
  44: EXIT_FINALLY
Constant Pool:
  0: String \`\$a == 99'
Line Number Table:
  lineNum: 1, address:  9
Exception Table:
  begin: 4, end: 21, type: Throwable, dest: 21, offset: 0, size: 0, level: 1
  begin: 24, end: 44, type: process guard%%, dest: 44, offset: 0, size: 0, level: 0"

$expect("$(ds --dump-code -c 'f() { var a = 23; defer { assert $a == 99; }; var b = 99;$a = $b; }; f')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
ARCode: top level
  code size: 7
  max stack depth: 1
  number of local variable: 0
  number of global variable: 57
Code:
  0: LOAD_CONST  2
  2: STORE_GLOBAL  56
  5: PUSH_INVALID
  6: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: %mod1.AAA function(%mod1.AAA)
Line Number Table:
Exception Table:

ARCode: function AAA
  code size: 23
  max stack depth: 2
  number of local variable: 2
Code:
   0: LOAD_LOCAL  0
   2: STORE_LOCAL  1
   4: TRY_GUARD0
   5: NEW  %mod1.AAA
   9: INIT_FIELDS  1  1
  12: ENTER_FINALLY  18
  17: RETURN
  18: PUSH_INT  34
  20: STORE_LOCAL  0
  22: EXIT_FINALLY
Constant Pool:
Line Number Table:
  lineNum: 1, address:  0
Exception Table:
  begin: 4, end: 18, type: Throwable, dest: 18, offset: 0, size: 0, level: 1
  begin: 18, end: 22, type: process guard%%, dest: 22, offset: 0, size: 0, level: 0"

$expect("$(ds --dump-code -c 'typedef AAA($a : Int) { var v = $a; defer { $a = 34; } }')", 0, $out)