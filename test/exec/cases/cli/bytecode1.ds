
source $SCRIPT_DIR/expect.ds

var out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 13
  max stack depth: 1
  number of local variable: 0
  number of global variable: 61
Code:
   0: PUSH_INT  34
   2: STORE_GLOBAL  60
   5: PUSH_INT  34
   7: CALL_BUILTIN2  1  %str
  10: POP
  11: PUSH_INVALID
  12: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  7
Exception Table:"

$expect("$(ds --dump-code -c 'var a = 34; 34 as String')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 29
  max stack depth: 4
  number of local variable: 0
  number of global variable: 61
Code:
   0: LOAD_CONST  2
   2: STORE_GLOBAL  60
   5: LOAD_GLOBAL  60
   8: PUSH_INT  1
  10: CALL_FUNC  1
  12: ENTER_FINALLY  22
  17: GOTO  26
  22: PUSH_INT  3
  24: POP
  25: EXIT_FINALLY
  26: POP
  27: PUSH_INVALID
  28: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: (Any) -> Boolean function(f)
Line Number Table:
  lineNum: 1, address:  5
Exception Table:
  begin: 5, end: 22, type: pseudo top%%, dest: 22, offset: 0, size: 0

DSCode: function f
  code size: 7
  max stack depth: 1
  number of local variable: 1
Code:
  0: LOAD_LOCAL  0
  2: INSTANCE_OF  [Int]
  6: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address: 0
Exception Table:"

var cmd = 'function f($a : Any) : Boolean { return $a is Array<Int>; }; try { $f(1) } finally {3}'
$expect("$(ds --dump-code -c $cmd)", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 46
  max stack depth: 2
  number of local variable: 2
  number of global variable: 60
Code:
   0: PUSH_INT  0
   2: STORE_LOCAL  0
   4: GOTO  18
   9: LOAD_LOCAL  0
  11: PUSH_INT  1
  13: CALL_BUILTIN2  2  %add
  16: STORE_LOCAL  0
  18: LOAD_LOCAL  0
  20: PUSH_INT  2
  22: CALL_BUILTIN2  2  %lt
  25: BRANCH  16
  28: STACK_GUARD
  29: PUSH_INT  34
  31: STORE_LOCAL  1
  33: RECLAIM_LOCAL  1  1
  36: GOTO_UNWIND  9
  41: RECLAIM_LOCAL  0  1
  44: PUSH_INVALID
  45: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  9
Exception Table:"

$cmd = 'for(var i = 0; $i < 2; $i++) { var b = 34; }'
$expect("$(ds --dump-code -c $cmd)", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 32
  max stack depth: 5
  number of local variable: 0
  number of global variable: 60
Code:
   0: PIPELINE_ASYNC 6 3  8  18  28
   9: LOAD_CONST  2
  11: NEW_CMD
  12: PUSH_NULL
  13: LOAD_CONST  3
  15: ADD_CMD_ARG  0
  17: CALL_CMD_NOFORK
  18: HALT
  19: LOAD_CONST  4
  21: NEW_CMD
  22: PUSH_NULL
  23: LOAD_CONST  5
  25: ADD_CMD_ARG  0
  27: CALL_CMD_NOFORK
  28: HALT
  29: POP
  30: PUSH_INVALID
  31: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo
  3: String hello
  4: String echo
  5: String hello
Line Number Table:
  lineNum: 1, address:  0
Exception Table:
  begin: 9, end: 28, type: process guard%%, dest: 28, offset: 0, size: 0"

$expect("$(ds --dump-code -n -c 'echo hello | echo hello &')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 36
  max stack depth: 4
  number of local variable: 0
  number of global variable: 60
Code:
   0: LOAD_CONST  2
   2: LOAD_GLOBAL  5
   5: CALL_BUILTIN2  1  %interp
   8: LOOKUP_HASH
   9: GOTO  34
  14: FORK  6  14
  18: LOAD_CONST  3
  20: NEW_CMD
  21: PUSH_NULL
  22: PUSH_STR1  `8'
  24: ADD_CMD_ARG  0
  26: CALL_CMD_NOFORK
  27: HALT
  28: POP
  29: GOTO  34
  34: PUSH_INVALID
  35: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: Void [999 : 14]
  3: String sleep
Line Number Table:
  lineNum: 1, address:  2
Exception Table:
  begin: 18, end: 27, type: process guard%%, dest: 27, offset: 0, size: 0"

$expect("$(ds -n --dump-code -c 'case "$PID" { "999" => sleep 8 & else => {} }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 17
  max stack depth: 1
  number of local variable: 1
  number of global variable: 60
Code:
   0: PIPELINE_LP 2  6  7
   6: HALT
   7: STORE_LOCAL  0
   9: PUSH_INT  23
  11: RECLAIM_LOCAL  0  1
  14: POP
  15: PUSH_INVALID
  16: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  0
Exception Table:"

$expect("$(ds -n --dump-code -c '{;;}|23')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 8
  max stack depth: 1
  number of local variable: 0
  number of global variable: 60
Code:
  0: FORK  6  5
  4: HALT
  5: POP
  6: PUSH_INVALID
  7: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address: 0
Exception Table:"

$expect("$(ds -n --dump-code -c '{;}&')", 0, $out)