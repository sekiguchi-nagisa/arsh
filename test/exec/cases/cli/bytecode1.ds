
source $SCRIPT_DIR/expect.ds

var out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 13
  max stack depth: 1
  number of local variable: 0
  number of global variable: 52
Code:
   0: PUSH_INT  34
   2: STORE_GLOBAL  51
   5: PUSH_INT  34
   7: CALL_BUILTIN2  1  %str
  10: POP
  11: PUSH_INVALID
  12: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  7
Exception Table:"

$expect("$(ds --dump-code -c 'var a = 34; 34 as String')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 29
  max stack depth: 4
  number of local variable: 0
  number of global variable: 52
Code:
   0: LOAD_CONST  2
   2: STORE_GLOBAL  51
   5: LOAD_GLOBAL  51
   8: PUSH_INT  1
  10: CALL_FUNC  1
  12: ENTER_FINALLY  22
  17: GOTO  26
  22: PUSH_INT  3
  24: POP
  25: EXIT_FINALLY
  26: POP
  27: PUSH_INVALID
  28: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: (Any) -> Bool function(f)
Line Number Table:
  lineNum: 1, address:  5
Exception Table:
  begin: 5, end: 22, type: pseudo top%%, dest: 22, offset: 0, size: 0

DSCode: function f
  code size: 7
  max stack depth: 1
  number of local variable: 1
Code:
  0: LOAD_LOCAL  0
  2: INSTANCE_OF  [Int]
  6: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address: 0
Exception Table:"

var cmd = 'function f($a : Any) : Bool { return $a is Array<Int>; }; try { $f(1) } finally {3}'
$expect("$(ds --dump-code -c $cmd)", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 46
  max stack depth: 2
  number of local variable: 2
  number of global variable: 51
Code:
   0: PUSH_INT  0
   2: STORE_LOCAL  0
   4: GOTO  18
   9: LOAD_LOCAL  0
  11: PUSH_INT  1
  13: CALL_BUILTIN2  2  %b_+
  16: STORE_LOCAL  0
  18: LOAD_LOCAL  0
  20: PUSH_INT  2
  22: CALL_BUILTIN2  2  %b_<
  25: BRANCH  16
  28: STACK_GUARD
  29: PUSH_INT  34
  31: STORE_LOCAL  1
  33: RECLAIM_LOCAL  1  1
  36: GOTO_UNWIND  9
  41: RECLAIM_LOCAL  0  1
  44: PUSH_INVALID
  45: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
Line Number Table:
  lineNum: 1, address:  9
Exception Table:"

$cmd = 'for(var i = 0; $i < 2; $i++) { var b = 34; }'
$expect("$(ds --dump-code -c $cmd)", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 34
  max stack depth: 5
  number of local variable: 0
  number of global variable: 51
Code:
   0: LOAD_CONST  2
   2: PIPELINE_ASYNC 6 3  8  18  28
  11: LOAD_CONST  3
  13: NEW_CMD
  14: PUSH_NULL
  15: LOAD_CONST  4
  17: ADD_CMD_ARG  0
  19: CALL_CMD_NOFORK
  20: HALT
  21: LOAD_CONST  5
  23: NEW_CMD
  24: PUSH_NULL
  25: LOAD_CONST  6
  27: ADD_CMD_ARG  0
  29: CALL_CMD_NOFORK
  30: HALT
  31: POP
  32: PUSH_INVALID
  33: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String echo hello\x00echo hello
  3: String echo
  4: String hello
  5: String echo
  6: String hello
Line Number Table:
  lineNum: 1, address:  0
Exception Table:
  begin: 11, end: 30, type: process guard%%, dest: 30, offset: 0, size: 0"

$expect("$(ds --dump-code -n -c 'echo hello | echo hello &')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 38
  max stack depth: 4
  number of local variable: 0
  number of global variable: 51
Code:
   0: LOAD_CONST  2
   2: LOAD_GLOBAL  5
   5: CALL_BUILTIN2  1  %interp
   8: LOOKUP_HASH
   9: GOTO  36
  14: LOAD_CONST  3
  16: FORK  6  14
  20: LOAD_CONST  4
  22: NEW_CMD
  23: PUSH_NULL
  24: PUSH_STR1  `8'
  26: ADD_CMD_ARG  0
  28: CALL_CMD_NOFORK
  29: HALT
  30: POP
  31: GOTO  36
  36: PUSH_INVALID
  37: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: Void [999 : 14]
  3: String sleep 8
  4: String sleep
Line Number Table:
  lineNum: 1, address:  2
Exception Table:
  begin: 20, end: 29, type: process guard%%, dest: 29, offset: 0, size: 0"

$expect("$(ds -n --dump-code -c 'case "$PID" { "999" => sleep 8 & else => {} }')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 19
  max stack depth: 1
  number of local variable: 1
  number of global variable: 51
Code:
   0: LOAD_CONST  2
   2: PIPELINE_LP 2  6  7
   8: HALT
   9: STORE_LOCAL  0
  11: PUSH_INT  23
  13: RECLAIM_LOCAL  0  1
  16: POP
  17: PUSH_INVALID
  18: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String {;;}\x0023
Line Number Table:
  lineNum: 1, address:  0
Exception Table:"

$expect("$(ds -n --dump-code -c '{;;}|23')", 0, $out)


$out = "### dump compiled code ###
Source File: (string)
DSCode: top level
  code size: 10
  max stack depth: 1
  number of local variable: 0
  number of global variable: 51
Code:
  0: LOAD_CONST  2
  2: FORK  6  5
  6: HALT
  7: POP
  8: PUSH_INVALID
  9: RETURN
Constant Pool:
  0: String (string)
  1: String $(pwd)
  2: String {;}
Line Number Table:
  lineNum: 1, address: 0
Exception Table:"

$expect("$(ds -n --dump-code -c '{;}&')", 0, $out)