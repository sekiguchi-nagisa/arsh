
source $SCRIPT_DIR/expect.ds

# no assert
assert ds --disable-assertion -c 'assert (12/0 == 12)'
assert ds -c 'shctl unset assert; assert $false'

# assert with message
var cmd = "assert
(false)    :
    \"hello assertion\""

var msg = "[runtime error]
Assertion Error: hello assertion
    from (string):2 '<toplevel>()'"

$expect("$(ds -c $cmd 2>&1)", 1, $msg)

# assert with message (power assert)
$msg = "[runtime error]
Assertion Error: \`\$OSTYPE =~ $/mac/'
binary expression \`<LHS> =~ <RHS>' is false
  <LHS>: String = $OSTYPE
  <RHS>: Regex = mac
    from (string):1 '<toplevel>()'"

$expect("$(ds -c 'assert $OSTYPE =~ $/mac/' 2>&1)", 1, $msg)

# assert without message
$msg = "[runtime error]
Assertion Error: \`\$false'
    from (string):1 '<toplevel>()'"

$expect("$(ds -c 'assert $false' 2>&1)", 1, $msg)

# assert without message (power assert)
$msg = "[runtime error]
Assertion Error: \`34 == 43'
binary expression \`<LHS> == <RHS>' is false
  <LHS>: Int = 34
  <RHS>: Int = 43
    from (string):1 '<toplevel>()'"

$expect("$(ds -c 'assert 34 == 43' 2>&1)", 1, $msg)
