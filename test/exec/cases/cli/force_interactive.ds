
source $SCRIPT_DIR/expect.ds

repl() {
    ds -i --quiet --norc $@
}

$expect("$(echo -n '23 as String' | repl 2>&1)", 0, ": String = 23")

$expect("$(echo -n '$true' | repl 2>&1)", 0, ': Bool = true')

$expect("$(echo -n 'true' | repl 2>&1)", 0, '')

$expect("$(echo -n 'true | false' | repl 2>&1)", 1, '')


# runtime error
var msg = "[runtime error]
UnwrappingError: invalid value
    from (stdin):1 '<toplevel>()'"

$expect("$(echo -n 'var a = (9, new Int!()); $a' | repl 2>&1)", 1, $msg)


$msg = "[runtime error]
cannot obtain string representation"

$expect("$(echo -n 'var a = (9, new Int!()); throw $a' | repl 2>&1)", 1, $msg)


# option type
$expect("$(echo -n 'var a = $true as Option<Boolean>; $a' | repl 2>&1)", 0, ': Bool! = true')

$expect("$(echo -n 'new Option<Bool>()' | repl 2>&1)", 0, ': Bool! = (invalid)')

$expect("$(echo -n 'var a = $true as String as Option<String>; $a' | repl 2>&1)", 0, ': String! = true')

$expect("$(echo -n 'new Option<String>()' | repl 2>&1)", 0, ': String! = (invalid)')


# escape
var out = "$(echo -n "\$'hello\x00world'" | repl 2>&1)"
$expect($out, 0, $': String = hello\x00world')