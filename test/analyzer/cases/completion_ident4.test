# RUN: call $cmd --test $self

{"id": 0, "jsonrpc": "2.0", "method": "initialize",
 "params": {"capabilities": {}, "rootUri": "file:///test", "processId": 46}}

#    CHECK: {
# CHECK_IF:     "capabilities": {
# CHECK_IF: }

<<<
{"jsonrpc": "2.0", "method": "textDocument/didOpen",
 "params": {
    "textDocument": {"languageId": "arsh", "version": 1, "uri": "file:///test/test.ds",
    "text": "var a : \nRe"
    }
 }
}

<<<
{"id": 1, "jsonrpc": "2.0", "method": "textDocument/completion",
  "params": {
    "context": { "triggerKind": 1 },
    "position": { "character": 2, "line": 1 },
    "textDocument": { "uri": "file:///test/test.ds" }
  }
}

# complete type names

# CHECK_IF:   "id": 1,
#    CHECK:   "jsonrpc": "2.0",
#    CHECK:   "result": [
#    CHECK:     {
#    CHECK:       "kind": 7,
#    CHECK:       "label": "Regex"
#    CHECK:     },
#    CHECK:     {
#    CHECK:       "kind": 7,
#    CHECK:       "label": "RegexMatch"
#    CHECK:     },
#    CHECK:     {
#    CHECK:       "kind": 7,
#    CHECK:       "label": "RegexMatchError"
#    CHECK:     },
#    CHECK:     {
#    CHECK:       "kind": 7,
#    CHECK:       "label": "RegexSyntaxError"
#    CHECK:     }
#    CHECK:   ]

<<<
{"id": 2, "jsonrpc": "2.0", "method": "shutdown"}

# CHECK_IF:   "result": null
#    CHECK: }

<<<
{"jsonrpc": "2.0", "method": "exit"}
# STATUS: 0