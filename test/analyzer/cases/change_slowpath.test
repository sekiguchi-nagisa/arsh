# RUN: call $cmd --test $self --debounce-time 500 --log info

{"id": 0, "jsonrpc": "2.0", "method": "initialize",
 "params": {"capabilities": {}, "rootUri": "file:///test", "processId": 46}}

#    CHECK: {
# CHECK_IF:     "capabilities": {
# CHECK_IF: }

<<<
{"jsonrpc": "2.0", "method": "textDocument/didOpen",
 "params": {
    "textDocument": {"languageId": "arsh", "version": 1, "uri": "file:///test/test.ds",
                     "text": "source not-found-.ds; var a"}
 }
}

<<<
{"jsonrpc": "2.0", "method": "textDocument/didChange",
  "params": {
    "contentChanges": [ { "text": "echo hello" } ],
    "textDocument": { "uri": "file:///test/test.ds", "version": 2 }
  }
}

<<<
{"jsonrpc": "2.0", "method": "textDocument/didOpen",
 "params": {
    "textDocument": {"languageId": "arsh", "version": 1, "uri": "file:///test/test2.ds",
                     "text": "var a = 34;"}
 }
}

<<<
{"jsonrpc": "2.0", "method": "textDocument/didChange",
  "params": {
    "contentChanges": [ { "text": "345" } ],
    "textDocument": { "uri": "file:///test/test2.ds", "version": 2 }
  }
}

## force rebuild

# CHECKERR_RE_IF: ^.+ <info> .+ rebuild started for 2 sources
# CHECKERR_RE_IF: ^.+ <info> .+ analyze modified src: id=2, version=2, path=/test/test2\.ds

# CHECK_IF:   "method": "textDocument/publishDiagnostics",
#    CHECK:   "params": {
#    CHECK:     "diagnostics": [],

# CHECK_IF:   "method": "textDocument/publishDiagnostics",
#    CHECK:   "params": {
#    CHECK:     "diagnostics": [],

<<< 550
{"id": 2, "jsonrpc": "2.0", "method": "shutdown"}

# CHECK_IF:   "result": null
#    CHECK: }

<<<
{"jsonrpc": "2.0", "method": "exit"}
# STATUS: 0