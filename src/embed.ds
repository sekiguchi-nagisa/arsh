# builtin variable definition (not call external command, sub-shell)

checkenv PATH || setenv PATH=/bin:/usr/bin:/usr/local/bin

importenv HOME; importenv PATH; importenv PWD; importenv OLDPWD;
importenv USER; importenv LOGNAME;

typedef Boolean = Bool; typedef UnixFD = FD

# dummy function for signal handler
function SIG_DFL($s : Signal) {}
function SIG_IGN($s : Signal) {}

function _DEF_SIGINT($s : Signal) {
    throw new SystemError($s.message());
}

function SIG_EXIT(s : Signal) {
  __puts -2 "gracefully shutdown process ($PID) by \`${$s.message()}'" || true
  exit ${128 + $s.value()}
}

# termination hook definition
var TERM_HOOK : ((Int, Any) => Void)?

# completer hook definition
var COMP_HOOK : Func<[String]?, [Module, [String], Int]>?

# line editor instance for repl
let LINE_EDIT : LineEditor; $LINE_EDIT.config("lang-extension", $true)

# command fallback handler definition
var CMD_FALLBACK : ((Module, [String]) -> Bool)?

true