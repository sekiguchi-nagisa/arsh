name: GitHub Actions

on: [push]

jobs:
  build_on_linux_ubuntu18_04:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        cc: [g++-5, g++-6, g++-7, g++-8, g++-9,
             clang++-3.9, clang++-4.0, clang++-5.0, clang++-6.0, clang++-8, clang++-9]
    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: sudo apt-get install ninja-build g++-5 g++-6 clang-5.0 clang-4.0 clang-3.9
    - name: configure
      run: |
        mkdir build
        cd build
        cmake .. -G Ninja \
              -DCMAKE_BUILD_TYPE=debug \
              -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
              -DUSE_EXTRA_TEST=on
    - name: build
      run: |
        cd build
        ninja
        sudo ninja install
        ./ydsh ../tools/scripts/copy_mod4extra.ds
    - name: test
      run: |
        cd build
        ctest --output-on-failure

  build_on_linux_ubuntu20_04:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cc: [g++-10, clang++-7, clang++-10]
    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: sudo apt-get install ninja-build g++-10 clang-10 clang-7
    - name: configure
      run: |
        mkdir build
        cd build
        cmake .. -G Ninja \
              -DCMAKE_BUILD_TYPE=debug \
              -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
              -DUSE_EXTRA_TEST=on
    - name: build
      run: |
        cd build
        ninja
        sudo ninja install
        ./ydsh ../tools/scripts/copy_mod4extra.ds
    - name: test
      run: |
        cd build
        ctest --output-on-failure

  build_on_linux_ubuntu20_04_release:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cc: [g++-10, clang++-10]
        option: [on, off]
    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: sudo apt-get install ninja-build g++-10 clang-10 lld-10 llvm-10 llvm-dev-10
    - name: configure
      run: |
        mkdir build
        cd build
        cmake .. -G Ninja \
              -DCMAKE_BUILD_TYPE=release \
              -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
              -DUSE_EXTRA_TEST=on \
              -DUSE_LTO=${{ matrix.option }}
    - name: build
      run: |
        cd build
        ninja
        sudo ninja install
        ./ydsh ../tools/scripts/copy_mod4extra.ds
    - name: test
      run: |
        cd build
        ctest --output-on-failure

  build_on_linux_sanitizer:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        option: [SANITIZER=address, SANITIZER=undefined]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: sudo apt-get install ninja-build
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=clang++-9 \
                -D${{ matrix.option }} \
                -DUSE_EXTRA_TEST=on
      - name: build
        run: |
          cd build
          ninja
          sudo ninja install
          ./ydsh ../tools/scripts/copy_mod4extra.ds
      - name: test
        run: |
          cd build
          ctest --output-on-failure

  build_on_linux_x86:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: build and test
        uses: ./tools/dockerfiles/ubuntu-bionic-x86

  build_on_mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: brew install ninja autoconf automake libtool
      - name: configure
        run: |
          export SDKROOT="$(xcrun --sdk macosx --show-sdk-path)"
          mkdir build
          cd build
          cmake .. -G Ninja -DUSE_EXTRA_TEST=on
      - name: build
        run: |
          cd build
          ninja
          ninja install
          ./ydsh ../tools/scripts/copy_mod4extra.ds
      - name: test
        run: |
          cd build
          ctest --output-on-failure
