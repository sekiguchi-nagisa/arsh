name: GitHub Actions

on: [ push ]

jobs:
  build_on_linux_ubuntu18_04:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        cc: [ g++-7, g++-8, g++-9,
              clang++-6.0, clang++-8, clang++-9 ]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt-get update
          sudo apt-get install language-pack-ja ninja-build \
               g++-5 g++-6 g++-8 clang-6.0 clang-8
          sudo apt remove libgcc-11-dev gcc-11
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_ubuntu20_04:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cc: [ g++-10, g++-11, clang++-7, clang++-10, clang++-11, clang++-12 ]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build \
               g++-10 g++-11 clang-10 clang-7 clang-11 clang-12
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_ubuntu22_04:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [ g++-12, clang++-13, clang++-14 ]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build \
               g++-12 clang-13 clang-14
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure


  build_on_linux_ubuntu22_04_release:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [ g++-12, clang++-14 ]
        option: [ on, off ]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build \
               g++-12 clang-14 lld lld-14 llvm-14 llvm-14-dev
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=release \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
                -DUSE_LTO=${{ matrix.option }}
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_sanitizer:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        option: [ address, undefined ]
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build clang-14
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=clang++-14 \
                -DSANITIZER=${{ matrix.option }} \
                -DUSE_EXTRA_TEST=on
      - name: build
        run: |
          cd build
          ninja
          sudo ninja install
          ./ydsh ../tools/scripts/copy_mod4extra.ds
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_fuzzing:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v1
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build clang-14
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DFUZZING_BUILD_MODE=on \
                -DCMAKE_CXX_COMPILER=clang++-14
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  #  build_on_linux_x86:
  #    runs-on: ubuntu-18.04
  #    steps:
  #      - uses: actions/checkout@v1
  #      - name: build and test
  #        uses: ./tools/dockerfiles/ubuntu-bionic-x86

  build_on_alpine:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - name: build and test
        uses: ./tools/dockerfiles/alpine