name: GitHub Actions

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - 'v*'

jobs:
  build_on_linux_ubuntu20_04_gcc:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cc: [ g++-7, g++-8 ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build g++-7 g++-8 g++
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_ubuntu20_04_clang:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cc: [ clang++-6.0, clang++-7, clang++-8, clang++-9, clang++-10 ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build \
               clang-6.0 clang-7 clang-8 clang-9 clang-10
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_ubuntu22_04_gcc:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [ g++-9, g++-10, g++-11, g++-12, g++-13 ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_ubuntu22_04_clang:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [ clang++-11, clang++-12, clang++-13, clang++-14, clang++-15 ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build clang-15 clang-11 clang-12
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure


  build_on_linux_ubuntu22_04_release:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cc: [ g++-13, clang++-15 ]
        option: [ on, off ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build \
               g++-13 clang-15 lld lld-15 llvm-15 llvm-15-dev
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=release \
                -DCMAKE_CXX_COMPILER=${{ matrix.cc }} \
                -DUSE_LTO=${{ matrix.option }}
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_sanitizer:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        option: [ address, undefined ]
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build clang-15
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=debug \
                -DCMAKE_CXX_COMPILER=clang++-15 \
                -DSANITIZER=${{ matrix.option }} \
                -DUSE_EXTRA_TEST=on
      - name: build
        run: |
          cd build
          ninja
          sudo ninja install
          ./arsh ../scripts/copy_mod4extra.ds
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  build_on_linux_fuzzing:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: prepare
        run: |
          sudo apt update
          sudo apt install language-pack-ja ninja-build clang-15
      - name: configure
        run: |
          mkdir build
          cd build
          cmake .. -G Ninja \
                -DFUZZING_BUILD_MODE=on \
                -DCMAKE_CXX_COMPILER=clang++-15
      - name: build
        run: |
          cd build
          ninja
      - name: test
        run: |
          cd build
          ctest -j4 --output-on-failure

  #  build_on_linux_x86:
  #    runs-on: ubuntu-18.04
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: build and test
  #        uses: ./tools/dockerfiles/ubuntu-bionic-x86

  build_on_alpine:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: build and test
        uses: ./tools/dockerfiles/alpine
