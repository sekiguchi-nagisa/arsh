#!/usr/bin/env arsh

if $# != 1 {
    echo "[usage] $0 [output]" 1>&2
    exit 1
}

command -v curl &> /dev/null || { echo require curl 1>&2; exit 1; }

let out = $1.startsWith("/") ? $1 : "../$1"
let work_dir = "emoji-variation"

test -d $work_dir || mkdir $work_dir

cd $work_dir

test -f emoji-variation-sequences.txt ||
    curl https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-variation-sequences.txt \
        -o ./emoji-variation-sequences.txt


type Entry {
    let codeStr: String
    let code: Int
}

function parse(line: String): Entry? {
    let ret = $/^(?<code>[0-9A-F]+) (?<vs>(FE0E|FE0F)) *; .+$/.match($line)!
    var codeStr = "0x${$ret.named('code')!}"
    var vs = $ret.named('vs')!
    $vs == 'FE0F' || return $none
    var code = $codeStr.toInt()!
    return new Entry($codeStr, $code)
}

var entries: [Entry]
var headers : [String]

for line in new FD('./emoji-variation-sequences.txt') {
    $line.empty() && continue
    if $line.startsWith('#') {
        if $headers.size() < 2 {
            $headers.add($line)
        }
        continue
    }
    var entry = $parse($line) ?? continue
    $entries.add($entry)
}

$entries.sortBy(function(x, y)=> $x.code.compare($y.code))

{
    echo "/* Auto-generated by scripts/$(basename $0) */"
    echo "/*"
    for h in $headers {
        echo $h
    }
    echo "*/"
    echo
    echo // clang-format off
    echo
    echo "static constexpr EMOJI_VARIATION_ENTRY emoji_variation_table[] = {"
    for e in $entries {
        echo "    ${$e.codeStr},"
    }
    echo "};"
} with > $out